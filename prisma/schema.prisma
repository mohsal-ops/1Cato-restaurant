// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider =  "postgresql"
  url      = env("DATABASE_URL")
}

model Item {
  id                     String  @id @default(uuid())
  name                   String
  description            String
  priceInCents           Int
  slug                   String  @unique
  isAvailableForPurchase Boolean @default(true)
  featured               Boolean @default(false)
  image                  String
  typeId                 String
  type                   Types   @relation(fields: [typeId], references: [id], onDelete: Restrict)
  orders                 Order[]
  isCaterable            Boolean @default(false)
  cateringDescription    String?
  cateringPriceInCents   Int?
}

model User {
  id        String   @id @default(uuid()) @map("_id")
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Types {
  id    String @id @default(uuid())
  name  String
  slug  String @unique
  items Item[]
}

model Location {
  id        String   @id @default(uuid())
  name      String
  lat       Float
  lng       Float
  createdAt DateTime @default(now())
}

model Order {
  id               String   @id @default(uuid()) @map("_id")
  pricePaidInCents Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  userId           String
  productId        String
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  product          Item     @relation(fields: [productId], references: [id], onDelete: Restrict)
}

model Cart {
  id        String     @id @default(uuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  items     CartItem[]      
  status    String     @default("open") // open/completed/abandoned
}

model CartItem {
  id         String   @id @default(uuid())
  image      String?
  productId  String?
  name       String?
  pickupDay  DateTime
  pickupTime String
  price      Int?
  quantity   Int?
  cartId     String
  cart       Cart      @relation(fields: [cartId], references: [id])
}
